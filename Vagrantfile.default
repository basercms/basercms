# Vagrant を利用する場合はこのファイルを Vagrantfile とリネームして利用します。
# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# 利用するIPアドレスを設定します
SERVER_IP_NETWORK = "192.168.33."
SERVER_IP_ADDRESS = SERVER_IP_NETWORK + "10"
SERVER_IP_SUBNETMASK = "255.255.255.0"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "chef/centos-6.6"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network :private_network, ip: SERVER_IP_ADDRESS

  # スマートフォン等の実機で確認する場合は、上記設定をコメントアウトして下記のように設定することで同一ネットワーク上から確認できます
  #config.vm.network :public_network, ip: SERVER_IP_ADDRESS
  # ネットワークアダプタを毎回聞かれて面倒な場合は、選択肢の文字列をコピーして、bridgeに設定します
  #config.vm.network :public_network, ip: SERVER_IP_ADDRESS, bridge: "en0: Wi-Fi (AirPort)"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
  #
  config.vm.synced_folder "./", "/vagrant", :create => true, :owner=> 'vagrant', :mount_options => ['dmode=777','fmode=777']

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "1024"
  end

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL

  config.vm.provision :chef_solo do |chef|
    chef.cookbooks_path = "./vagrant_cookbooks"
    chef.json = {
      :mysql => {
        :password => 'root'
      },
      :postgres => {
        :password => 'postgres'
      },
      :httpd => {
        :ip_address => SERVER_IP_ADDRESS,
        :ip_network => SERVER_IP_NETWORK,
        :ip_subnetmask => SERVER_IP_SUBNETMASK,
        :servername => 'www.example.local:80',
        :root => '/vagrant',
        :webroot => '/vagrant/app/webroot',
        :timeout => '60',
        :listen => '80',
        :user => 'vagrant',
        :group => 'vagrant'
      },
      :php => {
        :max_execution_time => '30',
        :memory_limit => '128M',
        :post_max_size => '32M',
        :default_charset => 'UTF-8',
        :upload_max_filesize => '16M'
      },
      :xdebug => {
        :remote_host => SERVER_IP_NETWORK + '1',
        :remote_port => '9000',
      },
      :basercms => {
        :database => 'basercms'
      }
    }
    chef.add_recipe "centos"
    chef.add_recipe "iptables"
    chef.add_recipe "yum::epel"
    chef.add_recipe "yum::remi"
    chef.add_recipe "yum-packages"
    chef.add_recipe "mysql"
    chef.add_recipe "postgres"
    chef.add_recipe "httpd"
    chef.add_recipe "php-composer"
    chef.add_recipe "basercms"
  end

  # Vagrant環境の使い方は「/vagrant_cookbooks/readme.txt」をご覧ください

end
